apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: mongo
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mongo
  serviceName: mongo-headless
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: mongo
    spec:
      containers:
        - name: mongo-container
          image: mongo:7.0.5
          imagePullPolicy: Always
          {{- if .Values.mongo.resources }}
          resources: {{- toYaml .Values.mongo.resources | nindent 12 }}
          {{- else if ne .Values.mongo.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.mongo.resourcesPreset ) | nindent 12 -}}
          {{- end }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.mongo.username }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.secretKeyName | required "Mongo Secret is required"}}
                  key: rootPassword
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
              readOnly: false
              subPath: ''
          ports:
            - name: mongo-port
              containerPort: 27017
          securityContext:
            allowPrivilegeEscalation: false
      terminationGracePeriodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: mongo-pvc
      name: mongo-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
